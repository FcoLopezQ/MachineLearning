# -*- coding: utf-8 -*-
"""Attack-Classification.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ux3pmZ0YZFpxSwtLxv89lAejgAI_T_68
"""

import numpy as np
import pandas as pd

from keras.models import load_model
from keras.utils import normalize

classifier = load_model('IDS2017-RT2.h5')
data_to_classify = pd.read_csv('Real-Time Validation.csv', header=0)
correct_predictions = data_to_classify['class']
correct_predictions = correct_predictions.to_numpy()
data_ = data_to_classify.drop(columns=['class'])
print(data_.tail())
i = -1

def classify(to_predict):
    """
    to_predict: Numpy array (equal to one row) with shape (1, 12, 1).
    return: Boolean (0 or 1) depending if attack or normal flow:
        0 -> Normal Flow; 
        1 -> Attack of any kind;
    """
    result = [0, 1]
    prediction = classifier.predict(to_predict)
    max_index = np.argmax(prediction)
    
    if result[max_index]:
        print("Predicted: Attack")
        return 0
    else:
        print("Predicted: Normal")
        return 1

data_ = normalize(data_)
to_classify = data_.to_numpy()

for row_ in to_classify:
    i = i +1
    if correct_predictions[i] == 1:
        print("Expected is Attack")
    else: 
        print("Expected is Normal")
    row_ = row_.reshape((1, 12, 1))
    result = classify(row_)
    print("\n")
    

